/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ArtistManagerGUI.java
 *
 * Created on Nov 17, 2011, 12:21:11 PM
 */
package gui;

import agents.ArtistManagerAgent;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author Igor
 */
public class ArtistManagerFrame extends javax.swing.JFrame implements ArtistManagerResponsiveGUI {
    private ArtistManagerAgent agent;

    /** Creates new form ArtistManagerGUI */
    public ArtistManagerFrame(ArtistManagerAgent agent) {
        this.agent = agent;
        
        initComponents();
    }
    
    @Override
    public void open() {
        setVisible(true);
    }
    
    @Override
    public void close() {
        Runnable closeTask = new Runnable() {
            @Override
            public void run() {
                dispose();
            }
        };
        try {
            SwingUtilities.invokeAndWait(closeTask);
        } catch (InterruptedException ex) {
            Logger.getLogger(ArtistManagerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(ArtistManagerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @Override
    public void log(String msg) {
        System.out.println(msg);
    }
    
    public void sellArtifact() {
        //Prepare args
        final String args[] = {null, null, null, null, null};

        //Run new task
        Runnable sellTask = new Runnable() {
            @Override
            public void run() {
                agent.sellArtifact(args);
            }
        };
        new Thread(sellTask).start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Agent Manager [" + agent.getLocalName() + "]" );
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Runnable killAgentTask = new Runnable() {
            @Override
            public void run() {
                agent.doDelete();
            }
        };
        new Thread(killAgentTask).start();
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
